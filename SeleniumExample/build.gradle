plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.seleniumhq.selenium:selenium-java:4.18.1'
    implementation("com.oracle.database.jdbc:ojdbc11:23.2.0.0")
    implementation("org.springframework.boot:spring-boot-starter-jdbc:3.3.0")
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.json:json:20210307'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}
application {
    mainClass = 'com.example.seleniumexample.SeleniumExampleApplication'  // 메인 클래스 설정
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // 중복 파일 제외
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // 중복 파일 제외
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // 리소스 처리 시 중복 파일 제외
}

tasks.named('test') {
    useJUnitPlatform()
}
